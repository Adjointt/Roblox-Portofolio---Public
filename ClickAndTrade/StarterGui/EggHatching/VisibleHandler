local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RemoteEvents = ReplicatedStorage.RemoteEvents
local Player = game.Players.LocalPlayer
local Camera = workspace.CurrentCamera
local DefaultSize = script.Parent.Size

function determineClosest(EggsAvailable)
	local CurrentClosest = nil
	local ClosestDistance = script.Parent.MaxMagnitude.Value
	for i,v in pairs(EggsAvailable) do
		local Egg = workspace.SpawnMap.EggPlates:FindFirstChild(v)
		local mag = (Egg.UIanchor.Position-Player.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
		if mag <= ClosestDistance then
			CurrentClosest = Egg
			ClosestDistance = mag
		end
	end
	return CurrentClosest
end

RS.RenderStepped:Connect(function()
	if Player.Character:FindFirstChild("Humanoid") then
		if Player.Character.Humanoid.Health ~= 0 then
			local EggsAvailable = {}
			local CameraRatio = ((Camera.CFrame.Position - Camera.Focus.Position).Magnitude)/11
			script.Parent.Visible = false
			for i, v in pairs(game.Workspace.SpawnMap.EggPlates:GetChildren()) do
				local uiAnchor = v:WaitForChild("UIanchor", 5)--local uiAnchor = v:FindFirstChild("UIanchor")
				if uiAnchor then
					local mag = (uiAnchor.Position - Player.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
					if mag <= script.Parent.MaxMagnitude.Value then
						EggsAvailable[#EggsAvailable + 1] = v.Name
					end
				else
					warn("UIanchor not found in egg model: " .. v.Name)
				end
			end
			if #EggsAvailable == 1 then
				local Egg = workspace.SpawnMap.EggPlates:FindFirstChild(EggsAvailable[1])
				local WSP = game.Workspace.CurrentCamera:WorldToScreenPoint(Egg.UIanchor.Position)
				script.Parent.Visible = true
				script.Parent.Position = UDim2.new(0,WSP.X,0,WSP.Y)
				script.Parent.CurrentTarget.Value = Egg.Name
				for i,v in pairs(workspace.SpawnMap.EggPlates:GetChildren()) do
					if v.Name ~= Egg.Name then
						v.Outline.Color = Color3.fromRGB(255,255,255)
					else
						v.Outline.Color = Color3.fromRGB(0,255,0)
					end
				end
			elseif #EggsAvailable > 1 then
				local Egg = determineClosest(EggsAvailable)
				local WSP = game.Workspace.CurrentCamera:WorldToScreenPoint(Egg.UIanchor.Position)
				script.Parent.Visible = true
				script.Parent.Position = UDim2.new(0,WSP.X,0,WSP.Y)
				script.Parent.CurrentTarget.Value = Egg.Name
				for i,v in pairs(workspace.SpawnMap.EggPlates:GetChildren()) do
					if v.Name ~= Egg.Name then
						v.Outline.Color = Color3.fromRGB(255,255,255)
					else
						v.Outline.Color = Color3.fromRGB(0,255,0)
					end
				end
			elseif #EggsAvailable == 0 then
				script.Parent.CurrentTarget.Value = "None"
				--[[for i,v in pairs(workspace.Eggs:GetChildren()) do
					v.Outline.Color = Color3.fromRGB(255,255,255)
				end]]
				for i, v in pairs(workspace.SpawnMap.EggPlates:GetChildren()) do
					local outline = v:WaitForChild("Outline", 5) -- Wait up to 5 seconds for Outline
					if outline then
						outline.Color = Color3.fromRGB(255, 255, 255)
					else
						warn("Outline not found in egg model: " .. v.Name .. " after waiting 5 seconds")
					end
				end
			end
			script.Parent.Size = UDim2.new(DefaultSize.X.Scale/CameraRatio, DefaultSize.X.Offset, DefaultSize.Y.Scale/CameraRatio, DefaultSize.Y.Offset)
		end
	end
end)
